(DATABASE_VERSION 17)
(ENTITY_FILE
  (ENTITY
    (OBID "ent914a64208c62be450572d74d04c7bdc1")
    (PROPERTIES
      (PROPERTY "STAMP_PLATFORM" "PC")
      (PROPERTY "STAMP_REVISION" "Revision 2")
      (PROPERTY "STAMP_TIME" "Mon Mar 02 15:16:28 2015")
      (PROPERTY "STAMP_TOOL" "Ease")
      (PROPERTY "STAMP_VERSION" "8.0")
    )
    (HDL_IDENT
      (NAME "counter_sec")
      (USERNAME 1)
    )
    (GEOMETRY 0 0 704 448)
    (SIDE 0)
    (HDL 1)
    (EXTERNAL 0)
    (OBJSTAMP
      (DESIGNER "mohammed.bensalah")
      (CREATED 1424697032 "Mon Feb 23 14:10:32 2015")
      (MODIFIED 1425305788 "Mon Mar 02 15:16:28 2015")
    )
    (PORT
      (OBID "eprt914a64202272be450572d74d76c7bdc1")
      (PROPERTIES
        (PROPERTY "SensitivityList" "Yes")
      )
      (HDL_IDENT
        (NAME "clk")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 1)
        )
      )
      (GEOMETRY -40 216 40 296)
      (SIDE 3)
      (LABEL
        (POSITION 64 256)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 3)
        (ALIGNMENT 3)
        (FORMAT 35)
        (TEXT "clk")
      )
    )
    (PORT
      (OBID "eprt914a64208272be450572d74db6c7bdc1")
      (PROPERTIES
        (PROPERTY "SensitivityList" "Yes")
      )
      (HDL_IDENT
        (NAME "reset_n")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 1)
        )
      )
      (GEOMETRY -40 344 40 424)
      (SIDE 3)
      (LABEL
        (POSITION 64 384)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 3)
        (ALIGNMENT 3)
        (FORMAT 35)
        (TEXT "reset_n")
      )
    )
    (PORT
      (OBID "eprt914a64209472be450572d74d77c7bdc1")
      (PROPERTIES
        (PROPERTY "SensitivityList" "Yes")
      )
      (HDL_IDENT
        (NAME "freq")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 1)
        )
      )
      (GEOMETRY -40 88 40 168)
      (SIDE 3)
      (LABEL
        (POSITION 64 128)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 3)
        (ALIGNMENT 3)
        (FORMAT 35)
        (TEXT "freq")
      )
    )
    (PORT
      (OBID "eprt914a64207672be450572d74d99c7bdc1")
      (HDL_IDENT
        (NAME "s_pulse")
        (USERNAME 1)
        (ATTRIBUTES
          (MODE 2)
        )
      )
      (GEOMETRY 664 216 744 296)
      (SIDE 1)
      (LABEL
        (POSITION 640 256)
        (SCALE 96)
        (COLOR_LINE 0)
        (SIDE 1)
        (ALIGNMENT 5)
        (FORMAT 35)
        (TEXT "s_pulse")
      )
    )
    (ARCH_DECLARATION 2 "arch914a64208c62be450572d74d44c7bdc1" "behavior")
  )
  (ARCH_DEFINITION
    (OBID "arch914a64208c62be450572d74d44c7bdc1")
    (HDL_IDENT
      (NAME "behavior")
      (USERNAME 1)
    )
    (TYPE 2)
    (HDL_FILE
      (VHDL_FILE
        (OBID "file914a64208c62be450572d74d54c7bdc1")
        (NAME "behavior.vhd")
        (VALUE "-- EASE/HDL begin --------------------------------------------------------------"
               "-- "
               "-- Architecture 'behavior' of entity 'counter_sec'."
               "-- "
               "--------------------------------------------------------------------------------"
               "-- "
               "-- Copy of the interface declaration:"
               "-- "
               "--   port ("
               "--     clk     : in     std_logic;"
               "--     freq    : in     std_logic;"
               "--     reset_n : in     std_logic;"
               "--     s_pulse : out    std_logic);"
               "-- "
               "-- EASE/HDL end ----------------------------------------------------------------"
               "signal counter : std_logic_vector(13 DOWNTO 0); -- Signal interne pour compteur (jusqu'Ã  9'999 -> 14 bits -> 2^14 = 16'384)"
               ""
               "architecture behavior of counter_sec is"
               "P1:process (clk, reset_n)"
               "	begin"
               "	if(reset_n) = '0' then -- reset asynchrone"
               "		s_pulse <= '0';"
               "		counter  <= (OTHERS => '0');"
               "	elsif(clk'EVENT and clk = '1') then"
               "		if UNSIGNED(counter) = 9999 then -- Pour avoir 1s, il faut multiplier 0.1ms par 10'000 (0 -> 9'999 = 10'000)"
               "			counter <= (OTHERS => '0');"
               "			s_pulse <= '1';"
               "		else"
               "			counter <= STD_LOGIC_VECTOR(UNSIGNED(counter) + 1);"
               "			s_pulse <= '0';"
               "		end if;"
               "	end if;		"
               "end process;"
               "end architecture behavior ; -- of counter_sec"
               ""
               "")
      )
    )
  )
)
(END_OF_FILE)
